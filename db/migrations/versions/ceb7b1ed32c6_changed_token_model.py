"""changed token model

Revision ID: ceb7b1ed32c6
Revises: c86760d68ee5
Create Date: 2023-11-29 13:35:27.482174

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ceb7b1ed32c6'
down_revision: Union[str, None] = 'c86760d68ee5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('CONFIRMATION_TOKEN',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=43), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('expired_on', sa.DateTime(), nullable=False),
    sa.Column('token_type', sa.Enum('email_confirmation', 'password_reset', name='token_types'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('TOKEN')
    op.drop_table('PASSWORD_TOKEN')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('PASSWORD_TOKEN',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"PASSWORD_TOKEN_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('reset_token', sa.VARCHAR(length=43), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('expired_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='PASSWORD_TOKEN_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='PASSWORD_TOKEN_pkey'),
    sa.UniqueConstraint('reset_token', name='PASSWORD_TOKEN_reset_token_key')
    )
    op.create_table('TOKEN',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"TOKEN_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('email_confirmation_token', sa.VARCHAR(length=43), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('expired_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='TOKEN_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='TOKEN_pkey'),
    sa.UniqueConstraint('email_confirmation_token', name='TOKEN_email_confirmation_token_key')
    )
    op.drop_table('CONFIRMATION_TOKEN')
    # ### end Alembic commands ###
